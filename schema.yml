openapi: 3.0.3
info:
  title: Hiring Dog
  version: 1.0.0
  description: Your project description
paths:
  /api/client/client-user/:
    get:
      operationId: client_client_user_retrieve
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ''
    post:
      operationId: client_client_user_create
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ''
    patch:
      operationId: client_client_user_partial_update
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ''
    delete:
      operationId: client_client_user_destroy
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/client/internal-client/{id}/:
    get:
      operationId: client_internal_client_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalClient'
          description: ''
    patch:
      operationId: client_internal_client_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInternalClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInternalClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInternalClient'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalClient'
          description: ''
    delete:
      operationId: client_internal_client_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/client/internal-clients/:
    get:
      operationId: client_internal_clients_retrieve
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalClient'
          description: ''
    post:
      operationId: client_internal_clients_create
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalClient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalClient'
          description: ''
  /api/client/interviewer/{id}/:
    get:
      operationId: client_interviewer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interviewer'
          description: ''
    patch:
      operationId: client_interviewer_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterviewer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterviewer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterviewer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interviewer'
          description: ''
    delete:
      operationId: client_interviewer_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/client/interviewers/:
    get:
      operationId: client_interviewers_retrieve
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interviewer'
          description: ''
    post:
      operationId: client_interviewers_create
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interviewer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interviewer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interviewer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interviewer'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - jwtAuth: []
      responses:
        '205':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logout successful
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Invalid request
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Token errors
          description: ''
  /api/logout-all/:
    post:
      operationId: logout_all_create
      tags:
      - logout-all
      security:
      - jwtAuth: []
      responses:
        '205':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logout successful
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Invalid request
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Token errors
          description: ''
  /api/password_reset/:
    post:
      operationId: password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/password_reset/confirm/:
    post:
      operationId: password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmSerailizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmSerailizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmSerailizer'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordConfirmSerailizer'
          description: ''
  /api/refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieTokenRefresh'
          description: ''
  /api/signup/:
    post:
      operationId: signup_create
      tags:
      - signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    ClientPointOfContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 128
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
    ClientUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        user_type:
          type: string
          nullable: true
          maxLength: 100
        job_assigned:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - job_assigned
    CookieTokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    InternalClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        website:
          type: string
          format: uri
          maxLength: 255
        domain:
          type: string
          maxLength: 255
        gstin:
          type: string
          maxLength: 15
        pan:
          type: string
          maxLength: 10
        is_signed:
          type: boolean
        assigned_to:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        points_of_contact:
          type: array
          items:
            $ref: '#/components/schemas/ClientPointOfContact'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - points_of_contact
    Interviewer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 128
        current_company:
          type: string
          maxLength: 255
        previous_company:
          type: string
          maxLength: 255
        current_designation:
          type: string
          maxLength: 255
        total_experience_years:
          type: integer
          maximum: 50
          minimum: 1
        total_experience_months:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        interview_experience_years:
          type: integer
          maximum: 50
          minimum: 1
        interview_experience_months:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        assigned_roles: {}
        skills: {}
        strength:
          oneOf:
          - $ref: '#/components/schemas/StrengthEnum'
          - $ref: '#/components/schemas/BlankEnum'
        cv:
          type: string
          format: uri
      required:
      - id
      - interview_experience_years
      - total_experience_years
    PatchedClientUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        user_type:
          type: string
          nullable: true
          maxLength: 100
        job_assigned:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedInternalClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        website:
          type: string
          format: uri
          maxLength: 255
        domain:
          type: string
          maxLength: 255
        gstin:
          type: string
          maxLength: 15
        pan:
          type: string
          maxLength: 10
        is_signed:
          type: boolean
        assigned_to:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        points_of_contact:
          type: array
          items:
            $ref: '#/components/schemas/ClientPointOfContact'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedInterviewer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 128
        current_company:
          type: string
          maxLength: 255
        previous_company:
          type: string
          maxLength: 255
        current_designation:
          type: string
          maxLength: 255
        total_experience_years:
          type: integer
          maximum: 50
          minimum: 1
        total_experience_months:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        interview_experience_years:
          type: integer
          maximum: 50
          minimum: 1
        interview_experience_months:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        assigned_roles: {}
        skills: {}
        strength:
          oneOf:
          - $ref: '#/components/schemas/StrengthEnum'
          - $ref: '#/components/schemas/BlankEnum'
        cv:
          type: string
          format: uri
    ResetPasswordConfirmSerailizer:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    StrengthEnum:
      enum:
      - backend
      - frontend
      - devops
      - testing
      - aiml
      - data_engineer
      type: string
      description: |-
        * `backend` - Backend
        * `frontend` - Frontend
        * `devops` - DevOps
        * `testing` - Strength
        * `aiml` - AI/ML
        * `data_engineer` - Data Engineer
    User:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
        phone:
          type: string
          maxLength: 128
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
