name: Deploy Django App to EC2

on:
  push:
    branches:
      - main  # Change to your branch

jobs:
  deploy:
    name: SSH Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Prepare target directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo mkdir -p /var/www/hiringdogbackend
          sudo chown -R $USER:$USER /var/www/hiringdogbackend
      
    - name: Copy project to EC2 via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "."                         # Sends entire repo (adjust if needed)
        target: "/var/www/hiringdogbackend"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /var/www/hiringdogbackend

          # Rename env file if it exists
          if [ -f env ]; then mv env .env; fi
          
          # Create and activate virtual environment
          python3 -m venv venv
          source venv/bin/activate
          
          # Install dependencies in venv
          #./venv/bin/python -m pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt

          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo pkill gunicorn
          sudo systemctl restart gunicorn  # or your process manager
